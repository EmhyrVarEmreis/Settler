<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="1.0-quartz-config" author="settler" dbms="postgresql">

        <sql>
            -- Thanks to Patrick Lightbody for submitting this...
            --
            -- In your Quartz properties file, you'll need to set
            -- org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.PostgreSQLDelegate

            DROP TABLE IF EXISTS zqrtz_fired_triggers;
            DROP TABLE IF EXISTS zqrtz_paused_trigger_grps;
            DROP TABLE IF EXISTS zqrtz_scheduler_state;
            DROP TABLE IF EXISTS zqrtz_locks;
            DROP TABLE IF EXISTS zqrtz_simple_triggers;
            DROP TABLE IF EXISTS zqrtz_cron_triggers;
            DROP TABLE IF EXISTS zqrtz_simprop_triggers;
            DROP TABLE IF EXISTS zqrtz_blob_triggers;
            DROP TABLE IF EXISTS zqrtz_triggers;
            DROP TABLE IF EXISTS zqrtz_job_details;
            DROP TABLE IF EXISTS zqrtz_calendars;

            CREATE TABLE zqrtz_job_details
            (
                SCHED_NAME        VARCHAR(120) NOT NULL,
                JOB_NAME          VARCHAR(200) NOT NULL,
                JOB_GROUP         VARCHAR(200) NOT NULL,
                DESCRIPTION       VARCHAR(250) NULL,
                JOB_CLASS_NAME    VARCHAR(250) NOT NULL,
                IS_DURABLE        BOOL         NOT NULL,
                IS_NONCONCURRENT  BOOL         NOT NULL,
                IS_UPDATE_DATA    BOOL         NOT NULL,
                REQUESTS_RECOVERY BOOL         NOT NULL,
                JOB_DATA          BYTEA        NULL,
                PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
            );

            CREATE TABLE zqrtz_triggers
            (
                SCHED_NAME     VARCHAR(120) NOT NULL,
                TRIGGER_NAME   VARCHAR(200) NOT NULL,
                TRIGGER_GROUP  VARCHAR(200) NOT NULL,
                JOB_NAME       VARCHAR(200) NOT NULL,
                JOB_GROUP      VARCHAR(200) NOT NULL,
                DESCRIPTION    VARCHAR(250) NULL,
                NEXT_FIRE_TIME BIGINT       NULL,
                PREV_FIRE_TIME BIGINT       NULL,
                PRIORITY       INTEGER      NULL,
                TRIGGER_STATE  VARCHAR(16)  NOT NULL,
                TRIGGER_TYPE   VARCHAR(8)   NOT NULL,
                START_TIME     BIGINT       NOT NULL,
                END_TIME       BIGINT       NULL,
                CALENDAR_NAME  VARCHAR(200) NULL,
                MISFIRE_INSTR  SMALLINT     NULL,
                JOB_DATA       BYTEA        NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
                    REFERENCES zqrtz_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP)
            );

            CREATE TABLE zqrtz_simple_triggers
            (
                SCHED_NAME      VARCHAR(120) NOT NULL,
                TRIGGER_NAME    VARCHAR(200) NOT NULL,
                TRIGGER_GROUP   VARCHAR(200) NOT NULL,
                REPEAT_COUNT    BIGINT       NOT NULL,
                REPEAT_INTERVAL BIGINT       NOT NULL,
                TIMES_TRIGGERED BIGINT       NOT NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES zqrtz_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            CREATE TABLE zqrtz_cron_triggers
            (
                SCHED_NAME      VARCHAR(120) NOT NULL,
                TRIGGER_NAME    VARCHAR(200) NOT NULL,
                TRIGGER_GROUP   VARCHAR(200) NOT NULL,
                CRON_EXPRESSION VARCHAR(120) NOT NULL,
                TIME_ZONE_ID    VARCHAR(80),
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES zqrtz_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            CREATE TABLE zqrtz_simprop_triggers
            (
                SCHED_NAME    VARCHAR(120)   NOT NULL,
                TRIGGER_NAME  VARCHAR(200)   NOT NULL,
                TRIGGER_GROUP VARCHAR(200)   NOT NULL,
                STR_PROP_1    VARCHAR(512)   NULL,
                STR_PROP_2    VARCHAR(512)   NULL,
                STR_PROP_3    VARCHAR(512)   NULL,
                INT_PROP_1    INT            NULL,
                INT_PROP_2    INT            NULL,
                LONG_PROP_1   BIGINT         NULL,
                LONG_PROP_2   BIGINT         NULL,
                DEC_PROP_1    NUMERIC(13, 4) NULL,
                DEC_PROP_2    NUMERIC(13, 4) NULL,
                BOOL_PROP_1   BOOL           NULL,
                BOOL_PROP_2   BOOL           NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES zqrtz_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            CREATE TABLE zqrtz_blob_triggers
            (
                SCHED_NAME    VARCHAR(120) NOT NULL,
                TRIGGER_NAME  VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                BLOB_DATA     BYTEA        NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES zqrtz_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            CREATE TABLE zqrtz_calendars
            (
                SCHED_NAME    VARCHAR(120) NOT NULL,
                CALENDAR_NAME VARCHAR(200) NOT NULL,
                CALENDAR      BYTEA        NOT NULL,
                PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
            );


            CREATE TABLE zqrtz_paused_trigger_grps
            (
                SCHED_NAME    VARCHAR(120) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
            );

            CREATE TABLE zqrtz_fired_triggers
            (
                SCHED_NAME        VARCHAR(120) NOT NULL,
                ENTRY_ID          VARCHAR(95)  NOT NULL,
                TRIGGER_NAME      VARCHAR(200) NOT NULL,
                TRIGGER_GROUP     VARCHAR(200) NOT NULL,
                INSTANCE_NAME     VARCHAR(200) NOT NULL,
                FIRED_TIME        BIGINT       NOT NULL,
                PRIORITY          INTEGER      NOT NULL,
                STATE             VARCHAR(16)  NOT NULL,
                JOB_NAME          VARCHAR(200) NULL,
                JOB_GROUP         VARCHAR(200) NULL,
                IS_NONCONCURRENT  BOOL         NULL,
                REQUESTS_RECOVERY BOOL         NULL,
                PRIMARY KEY (SCHED_NAME, ENTRY_ID)
            );

            CREATE TABLE zqrtz_scheduler_state
            (
                SCHED_NAME        VARCHAR(120) NOT NULL,
                INSTANCE_NAME     VARCHAR(200) NOT NULL,
                LAST_CHECKIN_TIME BIGINT       NOT NULL,
                CHECKIN_INTERVAL  BIGINT       NOT NULL,
                PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
            );

            CREATE TABLE zqrtz_locks
            (
                SCHED_NAME VARCHAR(120) NOT NULL,
                LOCK_NAME  VARCHAR(40)  NOT NULL,
                PRIMARY KEY (SCHED_NAME, LOCK_NAME)
            );

            create index idx_zqrtz_j_req_recovery on zqrtz_job_details (SCHED_NAME, REQUESTS_RECOVERY);
            create index idx_zqrtz_j_grp on zqrtz_job_details (SCHED_NAME, JOB_GROUP);

            create index idx_zqrtz_t_j on zqrtz_triggers (SCHED_NAME, JOB_NAME, JOB_GROUP);
            create index idx_zqrtz_t_jg on zqrtz_triggers (SCHED_NAME, JOB_GROUP);
            create index idx_zqrtz_t_c on zqrtz_triggers (SCHED_NAME, CALENDAR_NAME);
            create index idx_zqrtz_t_g on zqrtz_triggers (SCHED_NAME, TRIGGER_GROUP);
            create index idx_zqrtz_t_state on zqrtz_triggers (SCHED_NAME, TRIGGER_STATE);
            create index idx_zqrtz_t_n_state on zqrtz_triggers (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);
            create index idx_zqrtz_t_n_g_state on zqrtz_triggers (SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);
            create index idx_zqrtz_t_next_fire_time on zqrtz_triggers (SCHED_NAME, NEXT_FIRE_TIME);
            create index idx_zqrtz_t_nft_st on zqrtz_triggers (SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);
            create index idx_zqrtz_t_nft_misfire on zqrtz_triggers (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);
            create index idx_zqrtz_t_nft_st_misfire on zqrtz_triggers (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);
            create index idx_zqrtz_t_nft_st_misfire_grp on zqrtz_triggers (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

            create index idx_zqrtz_ft_trig_inst_name on zqrtz_fired_triggers (SCHED_NAME, INSTANCE_NAME);
            create index idx_zqrtz_ft_inst_job_req_rcvry on zqrtz_fired_triggers (SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);
            create index idx_zqrtz_ft_j_g on zqrtz_fired_triggers (SCHED_NAME, JOB_NAME, JOB_GROUP);
            create index idx_zqrtz_ft_jg on zqrtz_fired_triggers (SCHED_NAME, JOB_GROUP);
            create index idx_zqrtz_ft_t_g on zqrtz_fired_triggers (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
            create index idx_zqrtz_ft_tg on zqrtz_fired_triggers (SCHED_NAME, TRIGGER_GROUP);


            commit;
        </sql>

    </changeSet>

    <changeSet id="1.0-quartz-config" author="settler" dbms="mysql">

        <sql>
            DROP TABLE IF EXISTS ZQRTZ_FIRED_TRIGGERS;
            DROP TABLE IF EXISTS ZQRTZ_PAUSED_TRIGGER_GRPS;
            DROP TABLE IF EXISTS ZQRTZ_SCHEDULER_STATE;
            DROP TABLE IF EXISTS ZQRTZ_LOCKS;
            DROP TABLE IF EXISTS ZQRTZ_SIMPLE_TRIGGERS;
            DROP TABLE IF EXISTS ZQRTZ_SIMPROP_TRIGGERS;
            DROP TABLE IF EXISTS ZQRTZ_CRON_TRIGGERS;
            DROP TABLE IF EXISTS ZQRTZ_BLOB_TRIGGERS;
            DROP TABLE IF EXISTS ZQRTZ_TRIGGERS;
            DROP TABLE IF EXISTS ZQRTZ_JOB_DETAILS;
            DROP TABLE IF EXISTS ZQRTZ_CALENDARS;

            CREATE TABLE ZQRTZ_JOB_DETAILS
            (
                SCHED_NAME        VARCHAR(120) NOT NULL,
                JOB_NAME          VARCHAR(200) NOT NULL,
                JOB_GROUP         VARCHAR(200) NOT NULL,
                DESCRIPTION       VARCHAR(250) NULL,
                JOB_CLASS_NAME    VARCHAR(250) NOT NULL,
                IS_DURABLE        VARCHAR(1)   NOT NULL,
                IS_NONCONCURRENT  VARCHAR(1)   NOT NULL,
                IS_UPDATE_DATA    VARCHAR(1)   NOT NULL,
                REQUESTS_RECOVERY VARCHAR(1)   NOT NULL,
                JOB_DATA          BLOB         NULL,
                PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_TRIGGERS
            (
                SCHED_NAME     VARCHAR(120) NOT NULL,
                TRIGGER_NAME   VARCHAR(200) NOT NULL,
                TRIGGER_GROUP  VARCHAR(200) NOT NULL,
                JOB_NAME       VARCHAR(200) NOT NULL,
                JOB_GROUP      VARCHAR(200) NOT NULL,
                DESCRIPTION    VARCHAR(250) NULL,
                NEXT_FIRE_TIME BIGINT(13)   NULL,
                PREV_FIRE_TIME BIGINT(13)   NULL,
                PRIORITY       INTEGER      NULL,
                TRIGGER_STATE  VARCHAR(16)  NOT NULL,
                TRIGGER_TYPE   VARCHAR(8)   NOT NULL,
                START_TIME     BIGINT(13)   NOT NULL,
                END_TIME       BIGINT(13)   NULL,
                CALENDAR_NAME  VARCHAR(200) NULL,
                MISFIRE_INSTR  SMALLINT(2)  NULL,
                JOB_DATA       BLOB         NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                INDEX (SCHED_NAME, JOB_NAME, JOB_GROUP),
                FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
                    REFERENCES ZQRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_SIMPLE_TRIGGERS
            (
                SCHED_NAME      VARCHAR(120) NOT NULL,
                TRIGGER_NAME    VARCHAR(200) NOT NULL,
                TRIGGER_GROUP   VARCHAR(200) NOT NULL,
                REPEAT_COUNT    BIGINT(7)    NOT NULL,
                REPEAT_INTERVAL BIGINT(12)   NOT NULL,
                TIMES_TRIGGERED BIGINT(10)   NOT NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                INDEX (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_CRON_TRIGGERS
            (
                SCHED_NAME      VARCHAR(120) NOT NULL,
                TRIGGER_NAME    VARCHAR(200) NOT NULL,
                TRIGGER_GROUP   VARCHAR(200) NOT NULL,
                CRON_EXPRESSION VARCHAR(120) NOT NULL,
                TIME_ZONE_ID    VARCHAR(80),
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                INDEX (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_SIMPROP_TRIGGERS
            (
                SCHED_NAME    VARCHAR(120)   NOT NULL,
                TRIGGER_NAME  VARCHAR(200)   NOT NULL,
                TRIGGER_GROUP VARCHAR(200)   NOT NULL,
                STR_PROP_1    VARCHAR(512)   NULL,
                STR_PROP_2    VARCHAR(512)   NULL,
                STR_PROP_3    VARCHAR(512)   NULL,
                INT_PROP_1    INT            NULL,
                INT_PROP_2    INT            NULL,
                LONG_PROP_1   BIGINT         NULL,
                LONG_PROP_2   BIGINT         NULL,
                DEC_PROP_1    NUMERIC(13, 4) NULL,
                DEC_PROP_2    NUMERIC(13, 4) NULL,
                BOOL_PROP_1   VARCHAR(1)     NULL,
                BOOL_PROP_2   VARCHAR(1)     NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_BLOB_TRIGGERS
            (
                SCHED_NAME    VARCHAR(120) NOT NULL,
                TRIGGER_NAME  VARCHAR(200) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                BLOB_DATA     BLOB         NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                INDEX (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
                FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
                    REFERENCES ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_CALENDARS
            (
                SCHED_NAME    VARCHAR(120) NOT NULL,
                CALENDAR_NAME VARCHAR(200) NOT NULL,
                CALENDAR      BLOB         NOT NULL,
                PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_PAUSED_TRIGGER_GRPS
            (
                SCHED_NAME    VARCHAR(120) NOT NULL,
                TRIGGER_GROUP VARCHAR(200) NOT NULL,
                PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_FIRED_TRIGGERS
            (
                SCHED_NAME        VARCHAR(120) NOT NULL,
                ENTRY_ID          VARCHAR(95)  NOT NULL,
                TRIGGER_NAME      VARCHAR(200) NOT NULL,
                TRIGGER_GROUP     VARCHAR(200) NOT NULL,
                INSTANCE_NAME     VARCHAR(200) NOT NULL,
                FIRED_TIME        BIGINT(13)   NOT NULL,
                PRIORITY          INTEGER      NOT NULL,
                STATE             VARCHAR(16)  NOT NULL,
                JOB_NAME          VARCHAR(200) NULL,
                JOB_GROUP         VARCHAR(200) NULL,
                IS_NONCONCURRENT  VARCHAR(1)   NULL,
                REQUESTS_RECOVERY VARCHAR(1)   NULL,
                PRIMARY KEY (SCHED_NAME, ENTRY_ID)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_SCHEDULER_STATE
            (
                SCHED_NAME        VARCHAR(120) NOT NULL,
                INSTANCE_NAME     VARCHAR(200) NOT NULL,
                LAST_CHECKIN_TIME BIGINT(13)   NOT NULL,
                CHECKIN_INTERVAL  BIGINT(13)   NOT NULL,
                PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
            )
                ENGINE = InnoDB;

            CREATE TABLE ZQRTZ_LOCKS
            (
                SCHED_NAME VARCHAR(120) NOT NULL,
                LOCK_NAME  VARCHAR(40)  NOT NULL,
                PRIMARY KEY (SCHED_NAME, LOCK_NAME)
            )
                ENGINE = InnoDB;

            CREATE INDEX IDX_ZQRTZ_J_REQ_RECOVERY ON ZQRTZ_JOB_DETAILS (SCHED_NAME, REQUESTS_RECOVERY);
            CREATE INDEX IDX_ZQRTZ_J_GRP ON ZQRTZ_JOB_DETAILS (SCHED_NAME, JOB_GROUP);

            CREATE INDEX IDX_ZQRTZ_T_J ON ZQRTZ_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);
            CREATE INDEX IDX_ZQRTZ_T_JG ON ZQRTZ_TRIGGERS (SCHED_NAME, JOB_GROUP);
            CREATE INDEX IDX_ZQRTZ_T_C ON ZQRTZ_TRIGGERS (SCHED_NAME, CALENDAR_NAME);
            CREATE INDEX IDX_ZQRTZ_T_G ON ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);
            CREATE INDEX IDX_ZQRTZ_T_STATE ON ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE);
            CREATE INDEX IDX_ZQRTZ_T_N_STATE ON ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);
            CREATE INDEX IDX_ZQRTZ_T_N_G_STATE ON ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);
            CREATE INDEX IDX_ZQRTZ_T_NEXT_FIRE_TIME ON ZQRTZ_TRIGGERS (SCHED_NAME, NEXT_FIRE_TIME);
            CREATE INDEX IDX_ZQRTZ_T_NFT_ST ON ZQRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);
            CREATE INDEX IDX_ZQRTZ_T_NFT_MISFIRE ON ZQRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);
            CREATE INDEX IDX_ZQRTZ_T_NFT_ST_MISFIRE ON ZQRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);
            CREATE INDEX IDX_ZQRTZ_T_NFT_ST_MISFIRE_GRP ON ZQRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

            CREATE INDEX IDX_ZQRTZ_FT_TRIG_INST_NAME ON ZQRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME);
            CREATE INDEX IDX_ZQRTZ_FT_INST_JOB_REQ_RCVRY ON ZQRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);
            CREATE INDEX IDX_ZQRTZ_FT_J_G ON ZQRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);
            CREATE INDEX IDX_ZQRTZ_FT_JG ON ZQRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_GROUP);
            CREATE INDEX IDX_ZQRTZ_FT_T_G ON ZQRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);
            CREATE INDEX IDX_ZQRTZ_FT_TG ON ZQRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);

            COMMIT;
        </sql>

    </changeSet>

</databaseChangeLog>
