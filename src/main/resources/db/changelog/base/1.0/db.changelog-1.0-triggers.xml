<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="1.0-triggers" author="settler">

        <sql>
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_object_hierarchy_insert;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_object_hierarchy_delete;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_object_hierarchy_update;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_privilege_insert;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_privilege_delete;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_privilege_update;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_user_role_insert;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_user_role_delete;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_user_role_update;
        </sql>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_object_hierarchy_insert
            AFTER INSERT ON prv_object_hierarchy
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_hierarchy_insert(NEW.prv_object_from, NEW.prv_object_to);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_object_hierarchy_delete
            AFTER DELETE ON prv_object_hierarchy
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_hierarchy_delete(OLD.prv_object_from, OLD.prv_object_to);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_object_hierarchy_update
            AFTER UPDATE ON prv_object_hierarchy
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_hierarchy_delete(OLD.prv_object_from, OLD.prv_object_to);
                    CALL proc_jtb_object_hierarchy_insert(NEW.prv_object_from, NEW.prv_object_to);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_privilege_insert
            AFTER INSERT ON prv_privilege
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_privilege_refresh_by_owner(NEW.prv_owner);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_privilege_delete
            AFTER DELETE ON prv_privilege
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_privilege_refresh_by_owner(OLD.prv_owner);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_privilege_update
            AFTER UPDATE ON prv_privilege
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_privilege_refresh_by_owner(OLD.prv_owner);
                    CALL proc_jtb_object_privilege_refresh_by_owner(NEW.prv_owner);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_user_role_insert
            AFTER INSERT ON prv_user_role
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_privilege_refresh_by_owner(NEW.prv_user);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_user_role_delete
            AFTER DELETE ON prv_user_role
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_privilege_refresh_by_owner(OLD.prv_user);
                END;
        </createProcedure>

        <createProcedure>
            CREATE TRIGGER dev_settler.trg_prv_user_role_update
            AFTER UPDATE ON prv_user_role
            FOR EACH ROW
                BEGIN
                    CALL proc_jtb_object_privilege_refresh_by_owner(OLD.prv_user);
                    CALL proc_jtb_object_privilege_refresh_by_owner(NEW.prv_user);
                END;
        </createProcedure>

        <rollback>
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_object_hierarchy_insert;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_object_hierarchy_delete;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_object_hierarchy_update;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_privilege_insert;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_privilege_delete;
            DROP TRIGGER IF EXISTS dev_settler.trg_prv_privilege_update;
        </rollback>

    </changeSet>


</databaseChangeLog>